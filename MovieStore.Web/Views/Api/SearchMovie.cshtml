@model MovieStore.Core.DTOs.ApiMovieDto

@{
    ViewData["Title"] = "SearchMovie";
}

<h1>Search Movie</h1>

<h4>Search Movie From OMDb API</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="SearchMovie">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="@Model.MovieForm.Title" class="control-label"></label>
                <input asp-for="@Model.MovieForm.Title" class="form-control" />
                <span asp-validation-for="@Model.MovieForm.Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.MovieForm.Year" class="control-label"></label>
                <input asp-for="@Model.MovieForm.Year" class="form-control" />
                <span asp-validation-for="@Model.MovieForm.Year" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>


@if (Model?.MovieResult != null)
{
    <div>@Model.MovieResult.Title</div>
    <div>@Model.MovieResult.Plot</div>
    <div>@Model.MovieResult.Year</div>
    var genreStringList = new List<string>();
    foreach (var item in Model.MovieResult.Genres)
    {
        <div>@item.GenreName</div>
        genreStringList.Add(item.GenreName);
    }

    @Html.ActionLink("Add From Api", "AddMovieFromApi", new { Year = Model.MovieResult.Year, Title = Model.MovieResult.Title, Plot= Model.MovieResult.Plot, GenreList = genreStringList })
}

<div>
    <a asp-controller="Movie" asp-action="MovieList">Back to Movie List</a>
</div>

